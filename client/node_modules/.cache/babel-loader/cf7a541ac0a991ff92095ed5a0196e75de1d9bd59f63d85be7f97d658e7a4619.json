{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT BRANCH\\\\DB_Project\\\\DB_Project\\\\client\\\\src\\\\components\\\\user\\\\JobDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CompanyFinder from '../../apis/CompanyFinder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobDetails = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await CompanyFinder.get('User/Jobs');\n        setJobs(response.data.data.jobs);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Job Details of \", Name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover table-dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Job Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: jobs.map((job, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.salary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(JobDetails, \"bIUK16fhPnX8uHNnNisLCfti5AE=\");\n_c = JobDetails;\nexport default JobDetails;\nvar _c;\n$RefreshReg$(_c, \"JobDetails\");","map":{"version":3,"names":["React","useState","useEffect","CompanyFinder","jsxDEV","_jsxDEV","JobDetails","_s","jobs","setJobs","fetchData","response","get","data","error","console","log","children","Name","fileName","_jsxFileName","lineNumber","columnNumber","className","scope","map","job","index","name","salary","description","status","_c","$RefreshReg$"],"sources":["E:/PROJECT BRANCH/DB_Project/DB_Project/client/src/components/user/JobDetails.jsx"],"sourcesContent":["import React , {useState,useEffect}from 'react'\r\nimport CompanyFinder from '../../apis/CompanyFinder'\r\n\r\nconst JobDetails = () => {\r\n\r\n  const [jobs,setJobs] = useState([]);\r\n\r\n  useEffect (()=>{\r\n    const fetchData = async () =>\r\n    {\r\n      try {\r\n        const response = await CompanyFinder.get ('User/Jobs');\r\n        setJobs(response.data.data.jobs);\r\n        \r\n      } catch (error) {\r\n        console.log(error);\r\n        \r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n       <h2>Job Details of {Name}</h2>\r\n      <table className=\"table table-hover table-dark\">\r\n        <thead>\r\n          <tr className=\"bg-primary\">\r\n            <th scope=\"col\">Job Name</th>\r\n            <th scope=\"col\">Salary</th>\r\n            <th scope=\"col\">Description</th>\r\n            <th scope=\"col\">Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {jobs.map((job, index) => (\r\n            <tr key={index}>\r\n              <td>{job.name}</td>\r\n              <td>{job.salary}</td>\r\n              <td>{job.description}</td>\r\n              <td>{job.status}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default JobDetails"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}