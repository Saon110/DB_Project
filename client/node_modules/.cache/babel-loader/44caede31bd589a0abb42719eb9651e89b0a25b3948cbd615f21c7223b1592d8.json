{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECT BRANCH\\\\DB_Project\\\\DB_Project\\\\client\\\\src\\\\components\\\\user\\\\CompanyList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { CompanyContext } from '../../context/CompanyContext';\nimport CompanyFinder from '../../apis/CompanyFinder';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport '../../css/companylist.css';\nimport SearchBar from './SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyList = props => {\n  _s();\n  const {\n    company,\n    setCompany\n  } = useContext(CompanyContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await CompanyFinder.get(\"/User/Company\");\n        setCompany(response.data.data.companies);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchData();\n  }, [setCompany]);\n  const handleSearch = (selectedOption, searchText) => {\n    // Implement your search logic here\n    let filteredList = [...company];\n    console.log(filteredList);\n    console.log(selectedOption + \" \" + searchText);\n    if (selectedOption !== 'All') {\n      const fetchData = async () => {\n        try {\n          const response = await CompanyFinder.get(\"/User/Company/Search\", {\n            headers: {\n              type: `${selectedOption}`,\n              value: `${searchText}`\n            }\n          });\n          setCompany(response.data.data.companies);\n        } catch (err) {\n          console.error(err);\n        }\n      };\n      fetchData();\n    }\n\n    // if (selectedOption !== 'All') {\n    //   // Filter by selected option\n    //   filteredList = filteredList.filter((comp) => comp.category === selectedOption);\n    // }\n\n    // // Filter by search text\n    // filteredList = filteredList.filter((comp) =>\n    //   comp.name.toLowerCase().includes(searchText.toLowerCase())\n    // );\n\n    setCompany(filteredList);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Company List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      options: [{\n        value: 'All',\n        label: 'All'\n      }, {\n        value: 'Name',\n        label: 'By Name'\n      }, {\n        value: 'Address',\n        label: 'By Address'\n      }\n      // Add more options as needed\n      ],\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"company-list\",\n      children: company.map((comp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"smart-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/company/${comp.company_id}`,\n            children: comp.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), \" \", comp.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Website:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), \" \", comp.website]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), \" \", comp.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Jobs:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), \" \", comp.total_jobs]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Employees:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), \" \", comp.total_employees]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyList, \"br5VYkb5chnsDWI+/SR4xtDzgpU=\", false, function () {\n  return [useNavigate];\n});\n_c = CompanyList;\nexport default CompanyList;\nvar _c;\n$RefreshReg$(_c, \"CompanyList\");","map":{"version":3,"names":["React","useContext","useEffect","useState","CompanyContext","CompanyFinder","useNavigate","Link","SearchBar","jsxDEV","_jsxDEV","CompanyList","props","_s","company","setCompany","navigate","fetchData","response","get","data","companies","err","console","error","handleSearch","selectedOption","searchText","filteredList","log","headers","type","value","children","fileName","_jsxFileName","lineNumber","columnNumber","options","label","onSearch","className","map","comp","index","to","company_id","name","address","website","email","total_jobs","total_employees","_c","$RefreshReg$"],"sources":["E:/PROJECT BRANCH/DB_Project/DB_Project/client/src/components/user/CompanyList.jsx"],"sourcesContent":["import React, { useContext, useEffect ,useState} from 'react';\r\nimport { CompanyContext } from '../../context/CompanyContext';\r\nimport CompanyFinder from '../../apis/CompanyFinder';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../css/companylist.css';\r\nimport SearchBar from './SearchBar';\r\n\r\n\r\nconst CompanyList = (props) => {\r\n  const { company, setCompany } = useContext(CompanyContext);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await CompanyFinder.get(\"/User/Company\");\r\n        setCompany(response.data.data.companies);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [setCompany]);\r\n\r\n  const handleSearch = (selectedOption, searchText) => {\r\n    // Implement your search logic here\r\n    let filteredList = [...company];\r\n    console.log (filteredList);\r\n    console.log (selectedOption + \" \" + searchText);\r\n\r\n\r\n    \r\n\r\n    if (selectedOption !==  'All')\r\n    {\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await CompanyFinder.get(\"/User/Company/Search\" ,{\r\n            headers : {\r\n              type : `${selectedOption}` ,\r\n              value : `${searchText}`\r\n            }\r\n          });\r\n          setCompany(response.data.data.companies);\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n      };\r\n      fetchData();\r\n\r\n    }\r\n    \r\n\r\n    // if (selectedOption !== 'All') {\r\n    //   // Filter by selected option\r\n    //   filteredList = filteredList.filter((comp) => comp.category === selectedOption);\r\n    // }\r\n\r\n    // // Filter by search text\r\n    // filteredList = filteredList.filter((comp) =>\r\n    //   comp.name.toLowerCase().includes(searchText.toLowerCase())\r\n    // );\r\n\r\n    setCompany(filteredList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Company List</h1>\r\n      <SearchBar options={[\r\n          { value: 'All', label: 'All' },\r\n          { value: 'Name', label: 'By Name' },\r\n          { value: 'Address', label: 'By Address' },\r\n          // Add more options as needed\r\n        ]}\r\n onSearch={handleSearch} />\r\n\r\n      <div className=\"company-list\">\r\n        {company.map((comp, index) => (\r\n          <div key={index} className=\"smart-box\">\r\n            <h3>\r\n              <Link to={`/company/${comp.company_id}`}>{comp.name}</Link>\r\n            </h3>\r\n            <p>\r\n              <strong>Address:</strong> {comp.address}\r\n            </p>\r\n            <p>\r\n              <strong>Website:</strong> {comp.website}\r\n            </p>\r\n            <p>\r\n              <strong>Email:</strong> {comp.email}\r\n            </p>\r\n            <p>\r\n              <strong>Total Jobs:</strong> {comp.total_jobs}\r\n            </p>\r\n            <p>\r\n              <strong>Total Employees:</strong> {comp.total_employees}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyList;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC7D,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,OAAOC,aAAa,MAAM,0BAA0B;AACpD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,2BAA2B;AAClC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAGd,UAAU,CAACG,cAAc,CAAC;EAC1D,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,aAAa,CAACc,GAAG,CAAC,eAAe,CAAC;QACzDJ,UAAU,CAACG,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACC,SAAS,CAAC;MAC1C,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MACpB;IACF,CAAC;IACDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;EAEhB,MAAMU,YAAY,GAAGA,CAACC,cAAc,EAAEC,UAAU,KAAK;IACnD;IACA,IAAIC,YAAY,GAAG,CAAC,GAAGd,OAAO,CAAC;IAC/BS,OAAO,CAACM,GAAG,CAAED,YAAY,CAAC;IAC1BL,OAAO,CAACM,GAAG,CAAEH,cAAc,GAAG,GAAG,GAAGC,UAAU,CAAC;IAK/C,IAAID,cAAc,KAAM,KAAK,EAC7B;MACE,MAAMT,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC5B,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMb,aAAa,CAACc,GAAG,CAAC,sBAAsB,EAAE;YAC/DW,OAAO,EAAG;cACRC,IAAI,EAAI,GAAEL,cAAe,EAAC;cAC1BM,KAAK,EAAI,GAAEL,UAAW;YACxB;UACF,CAAC,CAAC;UACFZ,UAAU,CAACG,QAAQ,CAACE,IAAI,CAACA,IAAI,CAACC,SAAS,CAAC;QAC1C,CAAC,CAAC,OAAOC,GAAG,EAAE;UACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QACpB;MACF,CAAC;MACDL,SAAS,CAAC,CAAC;IAEb;;IAGA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEAF,UAAU,CAACa,YAAY,CAAC;EAC1B,CAAC;EAED,oBACElB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB3B,OAAA,CAACF,SAAS;MAAC8B,OAAO,EAAE,CAChB;QAAEN,KAAK,EAAE,KAAK;QAAEO,KAAK,EAAE;MAAM,CAAC,EAC9B;QAAEP,KAAK,EAAE,MAAM;QAAEO,KAAK,EAAE;MAAU,CAAC,EACnC;QAAEP,KAAK,EAAE,SAAS;QAAEO,KAAK,EAAE;MAAa;MACxC;MAAA,CACA;MACTC,QAAQ,EAAEf;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAErB3B,OAAA;MAAK+B,SAAS,EAAC,cAAc;MAAAR,QAAA,EAC1BnB,OAAO,CAAC4B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvBlC,OAAA;QAAiB+B,SAAS,EAAC,WAAW;QAAAR,QAAA,gBACpCvB,OAAA;UAAAuB,QAAA,eACEvB,OAAA,CAACH,IAAI;YAACsC,EAAE,EAAG,YAAWF,IAAI,CAACG,UAAW,EAAE;YAAAb,QAAA,EAAEU,IAAI,CAACI;UAAI;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD,CAAC,eACL3B,OAAA;UAAAuB,QAAA,gBACEvB,OAAA;YAAAuB,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACM,IAAI,CAACK,OAAO;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACJ3B,OAAA;UAAAuB,QAAA,gBACEvB,OAAA;YAAAuB,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACM,IAAI,CAACM,OAAO;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACJ3B,OAAA;UAAAuB,QAAA,gBACEvB,OAAA;YAAAuB,QAAA,EAAQ;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACM,IAAI,CAACO,KAAK;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACJ3B,OAAA;UAAAuB,QAAA,gBACEvB,OAAA;YAAAuB,QAAA,EAAQ;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACM,IAAI,CAACQ,UAAU;QAAA;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACJ3B,OAAA;UAAAuB,QAAA,gBACEvB,OAAA;YAAAuB,QAAA,EAAQ;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACM,IAAI,CAACS,eAAe;QAAA;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC;MAAA,GAlBIO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmBV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CA/FIF,WAAW;EAAA,QAEEL,WAAW;AAAA;AAAA+C,EAAA,GAFxB1C,WAAW;AAiGjB,eAAeA,WAAW;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}